name: docker

on:
  workflow_call:
    inputs:
      image:
        description: "Docker Image to build"
        default: ${{ github.repository }}
        required: false
        type: string
      project:
        description: "Project name"
        default: ${{ github.event.repository.name }}
        required: false
        type: string
      username:
        description: "Docker Hub Username"
        default: ${{ github.repository_owner }}
        required: false
        type: string
      cache:
        description: "Cache location for the Docker image"
        default: ${{ github.repository_owner }}/cache
        required: false
        type: string
      devenv:
        description: "Path to the devenv directory"
        default: "."
        required: false
        type: string
      tag:
        description: "Docker Image Tag"
        default: "dev"
        required: false
        type: string
    secrets:
      DOCKERHUB_TOKEN:
        description: "Docker Hub Token"
        required: true

jobs:
  verify:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ inputs.username }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Prepare secrets
        run: |
          echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" > secrets.env

      # Build the Docker image
      - name: build `${{ inputs.image }}:${{ inputs.tag }}` image
        uses: docker/build-push-action@v6
        with:
          load: true
          tags: "${{ inputs.image }}:${{ inputs.tag }}"
          cache-from: type=registry,ref=${{ inputs.cache }}:${{ inputs.project }}-${{ inputs.tag }}
          secrets: |
            "github-token=${{ secrets.GITHUB_TOKEN }}"
          secret-files: |
            "secrets.env=secrets.env"

      # Run the minimum required tests to validate the image
      # Make sure the current image is being built and used, and not a remote one
      - name: Lint the repository
        run: |
          docker compose run --build --rm devenv task lint
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEVENV: ${{ inputs.devenv }}

      # Build the Docker image and Push it to Docker Hub, just for caching purposes
      - name: build and push `${{ inputs.image }}:${{ inputs.tag }}` image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ inputs.image }}:${{ inputs.tag }}
          cache-from: type=registry,ref=${{ inputs.cache }}:${{ inputs.project }}-${{ inputs.tag }}
          cache-to: type=registry,ref=${{ inputs.cache }}:${{ inputs.project }}-${{ inputs.tag }},mode=max
          secrets: |
            "github-token=${{ secrets.GITHUB_TOKEN }}"
