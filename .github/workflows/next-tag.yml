name: calculate next tag

on:
  workflow_call:
    inputs:
      artifact:
        description: "If passed, the artifact to download"
        default: ""
        required: false
        type: string
      version:
        description: "The version of go-next-tag to use"
        default: ""
        required: false
        type: string
      bump:
        description: "The type of bump to use"
        default: "patch"
        required: false
        type: string

    outputs:
      last:
        description: "The last tag used"
        value: ${{ jobs.calculate.outputs.last }}
      next:
        description: "The next tag to use"
        value: ${{ jobs.calculate.outputs.next }}

jobs:
  calculate:
    runs-on: ubuntu-24.04
    outputs:
      next: ${{ steps.tag.outputs.next }}
      last: ${{ steps.tag.outputs.last }}
    steps:
      - uses: actions/checkout@v4

      - name: Download go-next-tag (curl)
        if: ${{ !inputs.artifact }}
        run: |
          ARGS=""
          # If inputs.version is set, use it as `-v <version>` for the install script
          if [ -n "${{ inputs.version }}" ]; then
            ARGS="-v ${{ inputs.version }}"
          fi

          curl -sSL https://raw.githubusercontent.com/idelchi/go-next-tag/refs/heads/main/install.sh | sh -s -- -d ~/.local/bin ${ARGS}

      - name: Download go-next-tag (artifact)
        uses: actions/download-artifact@v4
        if: ${{ inputs.artifact }}
        with:
          name: ${{ inputs.artifact }}
          path: ~/.local/bin

      - name: Calculate Next Tag
        id: tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LAST_TAG=$(gh release list -L 1 --exclude-pre-releases --json tagName -q '.[0].tagName')
          echo "last=${LAST_TAG}" >> ${GITHUB_OUTPUT}

          chmod +x ~/.local/bin/go-next-tag

          NEXT_TAG=$(go-next-tag ${LAST_TAG} --bump ${{ inputs.bump }})
          echo "next=${NEXT_TAG}" >> ${GITHUB_OUTPUT}

      - name: Display Tags
        run: |
          echo "The last tag is '${{ steps.tag.outputs.last }}'"
          echo "The next tag is '${{ steps.tag.outputs.next }}'"
