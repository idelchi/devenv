version: "3"

# requires
# - RESOURCES_DIR
# - HELM_PACKAGE_DIR
# - HELM_REPO_NAME
# - HELM_REPO_URL
vars:
  RESOURCES_DIR: '{{.RESOURCES_DIR | default "."}}'

shopt: [globstar]

tasks:
  lint:
    desc: "Lint Kubernetes manifests and Helm charts"
    summary: |
      Perform linting on Kubernetes manifests & Helm Charts using `kube-score`, `kube-linter` & `helm lint`.
    cmds:
      - kube-linter lint {{.FILES}}
      - kube-linter lint {{.CHARTS}}
      - kube-score score {{.SCORE_FILES}}
      - helm lint {{dir .CHARTS }}
    vars:
      CONFIG_PRETTIER: "{{.CONFIG_DIR}}/.prettierrc.yml"
      CONFIG_PRETTIER_IGNORE: "{{.CONFIG_DIR}}/.prettierignore"
      FILES:
        sh: find {{.RESOURCES_DIR}} -type f -name '*.yaml' | tr '\n' ' '
      CHARTS:
        sh: find {{.RESOURCES_DIR}} -type f -name 'Chart.yaml' | tr '\n' ' '
      SCORE_FILES:
        sh: >-
          find {{.RESOURCES_DIR}} -type f -name '*.yaml'
          | grep -v templates/
          | tr '\n' ' '

  format:
    desc: "Format Kubernetes manifests and Helm charts"
    summary: |
      Format Kubernetes & Helm manifests using `prettier`. Forces exit 0 so that it can skip syntax errors.
    cmds:
      - for: sources
        # Prettier can format some stuff, but has problems with Helm template syntax. Forced to exit 0.
        cmd: prettier --config={{.CONFIG_PRETTIER}} --log-level=silent --write {{.ITEM}} || true
    vars:
      CONFIG_PRETTIER: "{{.CONFIG_DIR}}/.prettierrc.yml"
    sources:
      - "{{.RESOURCES_DIR}}/**/*.yaml"
      - "{{.RESOURCES_DIR}}/**/*.yml"

  package:
    desc: "Package Helm chart"
    summary: |
      Package Helm chart for distribution.
    cmds:
      - for: sources
        cmd: |
          helm package -d {{.HELM_PACKAGE_DIR}} {{dir .ITEM}}
    sources:
      - "{{.RESOURCES_DIR}}/**/Chart.yaml"

  release:
    desc: "Release Helm chart"
    summary: |
      Release Helm chart by pushing to a Helm repository.
    deps: [package]
    cmds:
      - cmd: helm repo add {{.HELM_REPO_NAME}} {{.HELM_REPO_URL}}
      - for: sources
        cmd: |
          helm push {{.ITEM}} {{.HELM_REPO_NAME}}
    sources:
      - "{{.HELM_PACKAGE_DIR}}/*.tgz"

  test-release:
    desc: "Set up a local helm repository to test if the release works"
    summary: |
      Sets up a local helm chartmuseum repository for testing a push.
    deps: [package]
    cmds:
      - defer: pkill -f chartmuseum
      - cmd: |
          chartmuseum --storage="local" --storage-local-rootdir="./.charts" &
          helm repo add {{.HELM_REPO_NAME}} {{.HELM_REPO_URL}}
      - for: sources
        cmd: |
          helm cm-push --force {{.ITEM}} {{.HELM_REPO_NAME}}
    sources:
      - "{{.HELM_PACKAGE_DIR}}/*.tgz"
