version: '3'

vars:
  # Directories
  CONFIG_DIR: './config'
  SCRIPTS_DIR: './scripts'
  BUILD_DIR: '{{.BUILD_DIR | default ".build"}}'

tasks:
  # TODO: Replace with a tool
  ws:
    desc: Remove trailing whitespace from files
    summary: |
      This task removes trailing whitespace from all files except ignored paths.
    cmds:
      - |
        files=$(find . -type f \
        ! -path "*/.git/*" \
        ! -path "*/{{.BUILD_DIR}}/*" \
        ! -path "*/.task/*" \
        ! -path "*/.vscode-server/*" \
        -exec egrep -l " +$" {} \;)

        if [ -n "$files" ]; then
          for file in ${files[@]}; do
            echo "formatting $file..."
            sed --in-place 's/[[:space:]]\+$//' $file
          done
        fi

  docker:
    desc: Format Dockerfiles
    summary: |
      This task formats Dockerfiles using dockerfile-utils and removes trailing whitespace.
    cmds:
      - |
        dockerfiles=$(find . -name "Dockerfile")
        for dockerfile in $dockerfiles
        do
          tfile="$(mktemp /tmp/Dockerfile.XXXXX)"
          echo "$(cat $dockerfile)" > $tfile
          dockerfile-utils format --spaces 4 $tfile > $dockerfile
          sed --in-place 's/[[:space:]]\+$//' $dockerfile
          rm -f $tfile
        done
    preconditions:
      - sh: 'command -v dockerfile-utils'
        msg: 'dockerfile-utils errors out, check it nodejs is having problems'

  json:
    desc: Format JSON files
    summary: |
      This task formats JSON files using jsonlint and prettier.
    cmds:
      - jsonlint --mode=cjson --pretty-print --quiet --in-place --indent "    " .
      - prettier --config={{.CONFIG}} --loglevel=silent --ignore-path={{.IGNORE}} --write "**/*.json"
    vars:
      CONFIG: '{{.CONFIG_DIR}}/.prettierrc.yml'
      IGNORE: '{{.CONFIG_DIR}}/.ignore'
    sources:
      - ./**/*.json

  yaml:
    desc: Format YAML files
    summary: |
      This task formats YAML files using prettier.
    cmds:
      - prettier --config={{.CONFIG}} --loglevel=silent --ignore-path={{.IGNORE}} --write "**/*.yaml" "**/*.yml"
    vars:
      CONFIG: '{{.CONFIG_DIR}}/.prettierrc.yml'
      IGNORE: '{{.CONFIG_DIR}}/.ignore'
    sources:
      - ./**/*.yaml
      - ./**/*.yml

  md:
    desc: Format Markdown files
    summary: |
      This task formats Markdown files using markdownlint and prettier.
    cmds:
      - cmd: markdownlint --quiet --fix --ignore-path={{.IGNORE}} "**/*.md"
        ignore_error: true
      - prettier --config={{.CONFIG}} --loglevel=silent --ignore-path={{.IGNORE}} --write "**/*.md"
    vars:
      CONFIG: '{{.CONFIG_DIR}}/.prettierrc.yml'
      IGNORE: '{{.CONFIG_DIR}}/.ignore'
    sources:
      - ./**/*.md

  shell:
    desc: Format Shell scripts
    summary: |
      This task formats shell scripts using shfmt and applies shellcheck recommendations.
    cmds:
      - shfmt -i 2 -ci -s -w {{.SCRIPTS_DIR}}/**/*.sh
      - |
        for check in {{.CHECKS}}; do
          shellcheck --shell=bash --enable=$check --severity=style --source-path={{.SCRIPTS_DIR}}/go -f diff {{.SCRIPTS_DIR}}/**/*.sh | patch -p1 > /dev/null
        done
      - shellcheck --shell=bash --enable=all --severity=style --source-path={{.SCRIPTS_DIR}}/go -f diff {{.SCRIPTS_DIR}}/**/*.sh | patch -p1 > /dev/null
    vars:
      CHECKS: quote-safe-variables require-double-brackets require-variable-braces
    sources:
      - ./{{.SCRIPTS_DIR}}/**/*.sh

  jenkins:
    desc: Format Jenkinsfile
    summary: |
      This task formats the Jenkinsfile using npm-groovy-lint.
    cmds:
      - npm-groovy-lint --config={{.CONFIG_DIR}}/ --fix --nolintafter --no-insight --files "{{ .PWD }}/Jenkinsfile" > /dev/null
      - npm-groovy-lint --config={{.CONFIG_DIR}}/ --format --nolintafter --no-insight --files "{{ .PWD }}/Jenkinsfile"  > /dev/null
    sources:
      - ./Jenkinsfile

  # ---------
  default:
    desc: Run all formatting tasks in sequence
    cmds:
      - task: ws
      - task: docker
      - task: json
      - task: yaml
      - task: md
      - task: shell
      - task: jenkins
