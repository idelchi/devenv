version: "3"

# TODO: Formatters should (probably) not have non-zero exit codes unless they completely fail.

# requires
# - CONFIG_DIR
# - SCRIPTS_DIR
# - BUILD_DIR

# TODO(Idelchi): for loops are slow. Use shell to check if any files are present and then run, using `find` or something similar.

shopt: [globstar] # NOTE(Idelchi): Doesn't seem to work on a global level or in vars for some reason.

tasks:
  yaml:
    desc: Format YAML files
    summary: |
      This task formats YAML files using prettier.
    cmd:
      for: sources
      cmd: |
        yamlfmt -conf {{.CONFIG_YAMLFMT}} "{{toSlash .ITEM}}"
        prettier --log-level=silent --config={{.CONFIG_PRETTIER}} --ignore-path={{.IGNORE}}  --ignore-path={{.CONFIG_PRETTIER_IGNORE}} --write "{{toSlash .ITEM}}"
    vars:
      CONFIG_PRETTIER: "{{.CONFIG_DIR}}/.prettierrc.yml"
      CONFIG_PRETTIER_IGNORE: "{{.CONFIG_DIR}}/.prettierignore"
      CONFIG_YAMLFMT: "{{.CONFIG_DIR}}/.yamlfmt.yml"
      IGNORE: "{{.CONFIG_DIR}}/.ignore"
    sources:
      - ./**/*.yaml
      - ./**/*.yml

  json:
    desc: Format JSON files
    summary: |
      This task formats JSON files using jsonlint and prettier.
    cmds:
      - cmd: jsonlint --mode=cjson --pretty-print --quiet --in-place --indent "    " .
      - for: sources
        cmd: prettier --log-level=silent --config={{.CONFIG}} --ignore-path={{.IGNORE}} --write {{toSlash .ITEM}}
    vars:
      CONFIG: "{{.CONFIG_DIR}}/.prettierrc.yml"
      IGNORE: "{{.CONFIG_DIR}}/.ignore"
    sources:
      - ./**/*.json

  docker:
    desc: Format Dockerfiles
    summary: |
      This task formats Dockerfiles using dockerfile-utils.
    cmds:
      - for: sources
        cmd: dockerfile-utils format --spaces 4 {{toSlash .ITEM}} | sponge "{{toSlash .ITEM}}"
    preconditions:
      - sh: "command -v dockerfile-utils"
        msg: "dockerfile-utils errors out, check if nodejs is having problems"
    sources:
      - ./**/Dockerfile*

  md:
    desc: Format Markdown files
    summary: |
      This task formats Markdown files using markdownlint and prettier.
    # TODO(Idelchi): "|| true" because the command fails if no markdown files are found.
    cmd: |
      markdownlint --quiet --fix --config={{.CONFIG_MARKDOWNLINT}} --ignore-path={{.IGNORE}} "**/*.md" || true
      prettier --log-level=silent --config={{.CONFIG_PRETTIER}} --ignore-path={{.IGNORE}} --write "**/*.md" || true
    vars:
      CONFIG_MARKDOWNLINT: "{{.CONFIG_DIR}}/.markdownlint.yaml"
      CONFIG_PRETTIER: "{{.CONFIG_DIR}}/.prettierrc.yml"
      IGNORE: "{{.CONFIG_DIR}}/.ignore"
    sources:
      - ./**/*.md

  shell:
    desc: Format Shell scripts
    summary: |
      This task formats shell scripts using shfmt and applies shellcheck recommendations.
    cmd: |
      test -z "{{.FILES}}" && echo "no shell files found" && exit 0
      shfmt -i 2 -ci -s -w {{.FILES}}
      for check in {{.CHECKS}}; do
        shellcheck --enable=$check --severity=style --source-path=SCRIPTDIR -f diff {{.FILES}} | patch -p1 > /dev/null
      done
      shellcheck --enable=all --severity=style --source-path=SCRIPTDIR -f diff {{.FILES}} | patch -p1 > /dev/null
    vars:
      FILES:
        sh: find . -type f -name "*.sh" | tr '\n' ' '
      CHECKS: quote-safe-variables require-double-brackets require-variable-braces
    sources:
      - ./**/*.sh

  ws:
    desc: Remove trailing whitespace from files
    summary: |
      This task removes trailing whitespace from all files except ignored paths.
    cmd: wslint -w -q {{.WSLINT_ARGS}} "**" || exit 0
    vars:
      WSLINT_ARGS: '{{.WSLINT_ARGS | default "-e **/.build/**"}}'

  # ---------
  default:
    desc: Run all formatting tasks in sequence
    cmds:
      - task: yaml
      - task: json
      - task: docker
      - task: md
      - task: shell
      - task: ws
