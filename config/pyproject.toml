# BLACK
[tool.black]
line-length = 120

# ISORT
[tool.isort]
profile = "black"

# RUFF
[tool.ruff]
line-length = 120
select = ["ALL"]
ignore = [
  "ANN101", # Missing type annotation for self in method
  "EXE002", # The file is executable but no shebang is present
  "G004",   # Logging statement uses string formatting
  "INP001", # File is part of an implicit namespace package. Add an `__init__.py`.
  "ANN401", # Dynamically typed expressions (typing.Any) are disallowed in ...
  "I",      # isort runs before ruff
  "FBT001", # Boolean positional arg in function definition
  "FBT002", # Boolean default value in function definition
  "TRY301", # Abstract `raise` to an inner function
  "TRY300", # Consider moving this statement to an `else` block
  "FIX002", # Line contains TODO
  "ANN102", # Missing type annotation for `cls` in classmethod
  "TD003",  # Missing issue link on the line following this TODO
  "FA102",  # Missing `from __future__ import annotations`, but uses PEP 585 collection
]

unfixable = ["I"]

[tool.ruff.pydocstyle]
convention = "google"

# PYRIGHT
[tool.pyright]
typeCheckingMode = "strict"
reportUnknownVariableType = false
reportMissingTypeArgument = false
reportUnknownParameterType = false
reportUnknownMemberType = false
reportUnknownArgumentType = false
reportMissingTypeStubs = false
reportMissingImports = false

# MYPY
[tool.mypy]
strict = true
install_types = true
non_interactive = true
explicit_package_bases = true
disallow_any_generics = false
warn_return_any = false

ignore_missing_imports = true

# Pylint
[tool.pylint]
[tool.pylint.messages_control]
max-line-length = 120

disable = [
  "logging-fstring-interpolation",
  "too-few-public-methods",
  "relative-beyond-top-level",
  "import-error",
]

[tool.pylint.basic]
good-names = ["f"]
