run:
  timeout: 5m

linters:
  enable-all: true
  disable:
    # deprecated
    - tenv
    # # overly strict
    - exhaustruct
    # # Use named returns when it makes sense
    - nonamedreturns
    # No restrictions on packages
    - depguard

issues:
  exclude-use-default: false
  max-issues-per-linter: 0
  max-same-issues: 0

  exclude-rules:
    - path: "_test.go"
      linters:
        - funlen
        - wrapcheck

    # Exceptions for `main.go` and `config.go`
    - path: "^cmd/.+/(main|config)\\.go$"
      linters:
        - forbidigo
    - path: "main.go$"
      linters:
        - forbidigo

  exclude:
    # EXC0001 errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - "Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*printf?|os\\.(Un)?Setenv). is not checked"

linters-settings:
  forbidigo:
    forbid:
      # Encourage using loggers instead of fmt.Print*
      - 'fmt\.Print.*'
      # Discourage exiting the program
      - os.Exit
      - log.Fatal.*

  varnamelen:
    ignore-names:
      - tc
      - ok

  gci:
    sections:
      # std.
      - standard
      # extensions.
      - prefix(golang.org)
      # 3rd party.
      - prefix(github.com)
      # custom
      - prefix(github.com/idelchi)
      - default
    custom-order: true

  gofumpt:
    extra-rules: true

  ireturn:
    allow:
      - anon
      - error
      - empty
      - stdlib
      - generic

  cyclop:
    # The maximal code complexity to report.
    # Default: 10
    max-complexity: 30
    # The maximal average package complexity.
    # If it's higher than 0.0 (float) the check is enabled
    # Default: 0.0
    package-average: 10.0

  errcheck:
    # Report about not checking of errors in type assertions: `a := b.(MyStruct)`.
    # Such cases aren't reported by default.
    # Default: false
    check-type-assertions: true

  funlen:
    # Checks the number of lines in a function.
    # If lower than 0, disable the check.
    # Default: 60
    lines: 100
    # Checks the number of statements in a function.
    # If lower than 0, disable the check.
    # Default: 40
    statements: 50
    # Ignore comments when counting lines.
    # Default false
    ignore-comments: true

  gocognit:
    # Minimal code complexity to report.
    # Default: 30
    min-complexity: 20

  govet:
    # Enable all analyzers.
    # Default: false
    enable-all: true

  inamedparam:
    # Skips check for interface methods with only a single parameter.
    # Default: false
    skip-single-param: true

  mnd:
    # List of function patterns to exclude from analysis.
    # Values always ignored: `time.Date`,
    # `strconv.FormatInt`, `strconv.FormatUint`, `strconv.FormatFloat`,
    # `strconv.ParseInt`, `strconv.ParseUint`, `strconv.ParseFloat`.
    # Default: []
    ignored-functions:
      - args.Error
      - flag.Arg
      - flag.Duration.*
      - flag.Float.*
      - flag.Int.*
      - flag.Uint.*
      - os.Chmod
      - os.Mkdir.*
      - os.OpenFile
      - os.WriteFile
      - time.Duration

  nakedret:
    # Make an issue if func has more lines of code than this setting, and it has naked returns.
    # Default: 30
    max-func-lines: 0

  nolintlint:
    # Exclude following linters from requiring an explanation.
    # Default: []
    allow-no-explanation: [funlen, gocognit, lll]
    # Enable to require an explanation of nonzero length after each nolint directive.
    # Default: false
    require-explanation: true
    # Enable to require nolint directives to mention the specific linter being suppressed.
    # Default: false
    require-specific: true

  usetesting:
    # Enable/disable `os.TempDir()` detections.
    # Default: false
    os-temp-dir: true
